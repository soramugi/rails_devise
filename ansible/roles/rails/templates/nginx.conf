upstream rails_server {
  server unix:{{ rails.dir }}/shared/tmp/sockets/unicorn.sock;
}
server {
  listen                     80;
  server_name                {{ rails.url }};
  root                       {{ rails.dir }}/current/public/;
  access_log                 /var/log/nginx/rails_access.log;
  error_log                  /var/log/nginx/rails_error.log;
  client_max_body_size       3M;

  location / {
    if ($http_user_agent ~* "(MJ12bot)" ) { return 403; }
    if (-f $request_filename) { break; }
    # rails側でのヘッダー値でキャッシュするか決めるようにした方がいじりやすそう
    # @see http://shohu.hatenablog.com/entry/2012/07/05/174637
    set $do_not_cache 0; # 0=cache 1=no_cache

    proxy_no_cache     $do_not_cache;
    proxy_cache_bypass $do_not_cache;
    proxy_cache        cache_static_file;
    proxy_cache_key    $scheme$host$uri$is_args$args;
    proxy_cache_valid  200 302 1d;
    #proxy_cache_valid  any 1m;
    # cacheされてるかヘッダーに表示 MISS,BYPASS,HIT
    # $ curl -4 -X GET -I localhost:3000/topics/all.json
    add_header X-Proxy-Cache $upstream_cache_status;
    # rails側で設定してるSet-Cookieの削除ができれば不要
    proxy_ignore_headers Set-Cookie;

    proxy_set_header   X-Real-IP  $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   Host $http_host;

    proxy_pass http://rails_server;
  }

  location ~ ^/(assets|system)/ {
    gzip_static on;
    expires max;
    etag off;
    add_header Cache-Control public;
  }

  location ~* \.(woff|html|xml|txt|ico|css|js|gif|jpe?g|png|webp)(\?[0-9]+)?$ {
    gzip_static on;
    expires max;
    etag off;
    add_header Cache-Control public;
  }

}
